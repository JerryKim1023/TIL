파이썬 포스트,겟 요청시 순서
1.클라이언트와 서버 연결확인
2.서버 만들기
3.클라이언트 만들기
4.실행해서 완성확인하기 (console찍는다던가 response 등으로 확인)


***포스트 API에서

1. 요청 정보 :  URL= `/mars`, 요청 방식 = `POST`
2. 클라(ajax) → 서버(flask) : `name`, `address`, `size`
3. 서버(flask) → 클라(ajax) : 메시지를 보냄 (주문 완료!)

</aside>
서버에서는 doc = {
	딕셔너리
}
로해서 insert 등등 정보수정

클라이언트에서는

let aaa = $('#aaa').val() 변수설정
data: { name_give: name, address_give: address, size_give: size}, 데이터에 키,밸류 매칭을 맞춰준다.

window.location.reload() 	새로고침 버튼처럼 현재 리소스를 다시 불러오기 추가


***겟 API에서

1. 요청 정보 :  URL= `/mars`, 요청 방식 = `GET`
2. 클라(ajax) → 서버(flask) : (없음)
3. 서버(flask) → 클라(ajax) : 전체 주문을 보내주기


일방향

패키지 중 크롤링을 위해서는 requests 설치
requests  == 일종의 Ajax 같은 역할을 하는 친구



***파이참에서

컴퓨터는 띄어쓰기를 _ 언더바로 인식하기 때문에 이 규칙을 따라야함.

***알고리즘

2중 반복문 구조가 이해가 안 됨??
input = [3, 5, 6, 1, 2, 4]


def find_max_num(array):
    for num in array:
        for compare_num in array:
            if num < compare_num:
                break
            else:
                return num


result = find_max_num(input)
print(result)


*** 알파벳별 빈도수를 배열에서 하나씩 추출하는 부분...
def find_alphabet_occurrence_array(string):
    alphabet_occurrence_array = [0] * 26

    for char in string:
        if not char.isalpha():
            continue
        arr_index = ord(char) - ord("a")
        alphabet_occurrence_array[arr_index] += 1

    return alphabet_occurrence_array


print(find_alphabet_occurrence_array("hello my name is sparta"))


오늘 타임어택이라해서 깜짝 코딩테스트를 봤는데
그동안 배운 것들을 활용할 생각없이 떠오르는대로
구글링을 해서 찾다보니 시간을 많이 버렸다.
팀원 중 한 친구가 안정적으로 그 전 자료들은 복사해와서 구현한 것을 보니 많이 반성되었다.
진도 나가기 급급했던 내가 한심했고, 생각을 구현시키지 못하는 내 실력도 답답했다.

내일은 알고리즘 공부도 나가고 시간 할애해서 코딩테스트 복습? 을 해야겠다.
