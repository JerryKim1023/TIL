*긴 시간동안 프로세스(서버)는 응답이 오기를 가만히 기다리기만 하는데 이를 효율적으로 하기 이 위해서 아래와 같은 방법들을 사용
콘트렌드 프로그래밍 병렬처리방법
멀티 쓰레드, callback, promise 등 / 최근에 각광받는 방식이 바로 async/await


* django 는 현재 async orm 을 지원하지 않으나(이 부분이 매우 아쉬움) async view 는 지원
- async orm 을 사용하고 싶으신 분은 FastAPI 와 tortoise orm 을 공부

* 스크래치 파일 만들기 (컨트롤 + 시프트 + N) 파이썬 고름.

*- 함수 안에 yield 가 한 번이라도 등장하면 generator 함수 입니다.
- generator 함수를 실행하면 함수가 실행되는 대신 generator 객체를 리턴합니다.
- generator 의 `__next__()` 함수를 실행하면 함수 본문이 실행됩니다.
- 함수 본문 실행 중에 yield 를 만나면 일시정지 합니다.
- generator 는 함수가 실행되고 있는 환경을 그대로 저장한 상태로 함수를 "일시정지" 시킵니다. 따라서 일시정지 할 때 함수의 local 변수도 그대로 저장되어 있으며 다시 함수를 실행할 때 local 변수를 그대로 사용할 수 있습니다.

5-2 generator 이해가 잘 안 됨.... 찾아보면서 더 공부해야할 듯!

*5-3 Async, event loop...,deque, heap 등등... 다시 이해 필요.. 병렬처리해서 빨리 실행되는 거 까지는 알겠음... 코드 구현이 어려움

*5-4 return 뒤에 cast?  article_service.py 26번째 줄.


*async await + promise를 써야 버그가 안 생김! (무한루핑이 안 됨.)
비동기화 = 지금이 안 되도 로딩이 되면 그때 처리되게 하는 것!

소스코드로 바로 되자마자 실행이 동기화

비동기는 많이 쓰면 안 좋음. 왠만하면 바로바로 쓸 수 있는 클래스나 함수가 좋음
그래서 비동기,동기를 쓸 때는 목적이 확실 해야함. 


파이썬 venv 는 프로젝트 안에 두기

poetry  최신버전이라 오류가 좀 있음

pipenv 는 가상환경을 로컬에다 만듦 / 쉽고 빠름. / 폴더이름을 갖고 생성해서 구분하기가 쉬움
package.manager로 에러 체크

머신러닝 == 학습을 통한 거고
딥러닝은 == 있는 모델을 가지고 처리?
...
5-6에서 이상한 유저네임 패스워드 치는 거 때문에 인증이 안됨
