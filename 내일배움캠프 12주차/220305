int = 정수
float = 소수점
str = 문자열

a, b = input().split()   공백을 가진 두개의 문자열을 가져와서 두개의 값으로 받아와준다.
print(a, b, sep=':')     a:b 로 띄어쓰기 없이 붙어서 출력 가능

a = input()
n = int(a)            #입력된 a를 10진수 값으로 변환해 변수 n에 저장
print('%x'% n)    사용예시는 왼쪽과 같다.    x = 소문자로 출력 =, X = 대문자로 출력 /  o = 8진수로 출력

a = input()
n = int(a, 16)      #입력된 a를 16진수로 인식해 변수 n에 저장




***chr( )는 정수값->문자, ord( )는 문자->정수값 형태로 바꿔주는 서로 반대 방향으로 바꾸어 주는 기능을 한다.
	n = ord(input())  #입력받은 문자를 10진수 유니코드 값으로 변환한 후, n에 저장한다.

	c = int(input())
	print(chr(c))  #c에 저장되어 있는 정수 값을 유니코드 문자(chracter)로 바꿔 출력한다. 

** = 거듭제곱
// = 나눈 몫
% = 나눈 나머지

format(수, ".2f") 를 사용하면 원하는 자리까지의 정확도로 반올림 된 실수 값을 만들어 준다. 

예시
n = 10
print(n<<1)  #10을 2배 한 값인 20 이 출력된다.
print(n>>1)  #10을 반으로 나눈 값인 5 가 출력된다.
print(n<<2)  #10을 4배 한 값인 40 이 출력된다.
print(n>>2)  #10을 반으로 나눈 후 다시 반으로 나눈 값인 2 가 출력된다.


52번문제 
n = int(input())
print(bool(n)) 이게 왜 정답??


53번문제
a = bool(int(input()))
print(not a)

조건문 넣는 예시
c = (a if (a>=b) else b)

참고
3개의 요소로 이루어지는 3항 연산은
"x if C else y" 의 형태로 작성이 된다.
- C : True 또는 False 를 평가할 조건식(conditional expression) 또는 값
- x : C의 평가 결과가 True 일 때 사용할 값
- y : C의 평가 결과가 True 가 아닐 때 사용할 값


3항 연산식
(a if a>b else b) if ((a if a>b else b)>c) else c
와 같은 계산식은 a, b, c 의 값 중 가장 큰 값으로 계산된다. 

if n<0 :
  if n%2==0 :   이런식으로 조건문 안에 조건문을 넣어서 조건문을 중첩할 수 있다.











***AWS 배포, SQL , 장고 개인스택, javascript, Docker
알고리즘 할 때 변수명을 알파벳 이니셜말고 제대로 된 변수를 지정해보자!!
for temp in temps
temp, tmp
index, idx
@@_list
map(적용할함수, 적용시키고 싶은 값)
a,b = input().split()
a,b = list(map(int, input().split())
lambda 매개변수 : 표현식
(lambda x,y: x + y)(10, 20) = 30

자료구조!!
파이썬 콤프리 헨션
range(1, n+1) 1부터 n까지 반복

a, b, c = input().split()

a = int(a)
b = int(b)
c = int(c)

if a%2==0 :  #논리적으로 한 단위로 처리해야하는 경우 콜론(:)을 찍고, 들여쓰기로 작성 한다.
   print("even")
else :
  print("odd") 

if b%2==0 :
   print("even")
else :
  print("odd") 

if c%2==0 :
   print("even")
else :
  print("odd") 




if n<0 :
  if n%2==0 :
    print('A')      #주의 : 변수 A와 문자열 'A' / "A" 는 의미가 완전히 다르다. 
  else :
    print('B')
else :
  if n%2==0 :
    print('C')
  else :
    print('D')



1009,2588

restful API

자료구조를 써서 알고리즘 해결?? 자료구조의 일종인 어레이 이런 거를 쓰라는 뜻?

파이썬 콤프리 헨션

lambda

반복문 evaluate