node.js 같은 WAS 에서 기능 이런 거를 담고    /    플라스크 서버 , 이렇게 서버를 따로 둔다는 게 이해를 안감

우리가 ec2로 서버를 배포하는데 url 갖고 있는 게 서버 아닌가여?

nginx 같은 WS에 렌더링 되는 부분 html 배포 / nginx가 로드밸런싱역할? WAS의 부담은 옆에있는 WAS가 나눠주는거임.

AWS s3 같은데에 css / CDN 처럼 배포 가능   이미지 서버는 요런 s3 서버에다가 배포가능

노드의 이벤트 루프!!!  nginx는 이벤트루프를 쓰고, apach는 이벤트루프를 안 씀.

1.서버 따로 둔다는 게 이해가 어렵고

2.reverse proxy가 로드밸런싱 역할이랑 ssl 인증을 해준다는 게 개념이 이해가 안가요. proxy 대안??
- 노드가 recwerse proxy 를 사용하는 거임.

-라우트53인증서(아마존만 순수하게 쓴다하면 ACM 인증서)ELB랑 따로 쓰는 겁니다.    
인증서를 ELB에 달음. SSL랑 로드밸런싱(부하분산)을 사용 / 라운드로빈

--- AWS

3.WAS에 기능을 담으면 서버?사이트배포? 시에 js가 안 보인다는 건가요?

4.CDN처럼 배포가능이라고...        css 숨기는거?? /  
js를 미니파이 어글리파이로 바꿈
user면 user / user 가 n이 되고





노드는 프레임 워크가 WAS
노드는 엄청 빠르다!
스프링 플라스크 장고는 와스를 필요로 한다.
장고 개발 시 쿼리랑 모델을 어떻게 정할지 / 하나의 리퀘스트에서 이벤트 발생

수많은 요청을 동시에 뷰펑션에 나눠줄지  ---->> 와스가 하는 일

장고의 디버그 서버 동시성 문제를 해결 X   프로세스가 하나고 쓰레드가 하나라서 하나의 요청만 처리가능
플라스크는 그런데 장고의 디버그 서버는 한 번에 여러개 요청처리 가능
와스 ---- 구니콘,uwsgy     --->>>  로드밸런싱 역할
장고 ----- uwsgy    로컬에서는 장고디버거에서 개발하고 ec2에서 제어할 때 구니콕 깔아서 배포




장고는 리스폰스를 보내주고








